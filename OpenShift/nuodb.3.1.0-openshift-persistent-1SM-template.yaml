apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: nuodb.3.1.0-ce-ephemeral
  labels:
    template: nuodb.3.1.0-ce-ephemeral
  annotations:
    openshift.io/display-name: "NouDB CE (Ephemeral)"
    description: "NuoDB database service, without persistent storage. For more information about using this template, including OpenShift considerations, see https://hub.docker.com/r/nuodb/nuodb-ce/ \n\nWARNING: Any data stored will be lost upon pod destruction. Only use this template for testing"
    iconClass: icon-mysql-database
    tags: "database,nuodb"
    openshift.io/long-description: "This template provides a Clustered NuoDB server with a database created.  The database is not stored on persistent storage, so any restart of the service will result in all data being lost.  The database name, username, and password are chosen via parameters when provisioning this service."
    openshift.io/provider-display-name: "NuoDB, Inc."
    openshift.io/documentation-url: "http://doc.nuodb.com/Latest/Default.htm"
    openshift.io/support-url: "https://support.nuodb.com/hc/en-us"
    message: "The following service(s) have been created in your project: placeholder.\n\n"
objects:
- apiVersion: v1
  kind: Secret
  metadata:
    name: nuodb
    annotations:
      "template.openshift.io/expose-username": "{.data['database-username']}"
      "template.openshift.io/expose-password": "{.data['database-password']}"
      "template.openshift.io/expose-database-name": "{.data['database-name']}"
  stringData:
    "database-username": "${DB_USER}"
    "database-password": "${DB_PASSWORD}"
    "database-name": "${DB_NAME}"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: "Service for Admin pods."
    labels:
      app: ${ADMIN_SVC_NAME}
    name: ${ADMIN_SVC_NAME}
  spec:
    ports:
    - name: 8888-tcp
      port: 8888
      protocol: TCP
      targetPort: 8888
    - name: 48004-tcp
      port: 48004
      protocol: TCP
      targetPort: 48004
    - name: 48005-tcp
      port: 48005
      protocol: TCP
      targetPort: 48005
    selector:
      app: admin
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${SM_PVC}
  spec:
    storageClassName: openebs-percona
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 5G
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: "Broker pod instance deployment configuration"
      template.alpha.openshift.io/wait-for-ready: "true"
    labels:
      app: admin
    name: admin
  spec:
    replicas: 1
    selector:
      app: admin
      deploymentconfig: admin
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        labels:
          app: admin
          deploymentconfig: admin
      spec:
        containers:
        - env:
          - name: AGENT_PORT
            value: "8888"
          - name: PEER_ADDRESS
            value: ${ADMIN_SVC_NAME}
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name: nuodb
                key: database-name
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: nuodb
                key: database-username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: nuodb
                key: database-password
          - name: NODE_REGION
            value: local
          - name: NODE_TYPE
            value: NUOADMIN
          image: ${CONTAINER}
          imagePullPolicy: IfNotPresent
          name: admin
          ports:
          - containerPort: 8888
            protocol: TCP
          - containerPort: 48004
            protocol: TCP
          - containerPort: 48005
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /archive
            name: admin-volume-1
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: admin-volume-1
    test: false
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: "Storage Manager(SM) pod instance deployment configuration"
      template.alpha.openshift.io/wait-for-ready: "true"
    labels:
      app: sm
    name: sm
  spec:
    replicas: 1
    selector:
      app: sm
      deploymentconfig: sm
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        labels:
          app: sm
          deploymentconfig: sm
      spec:
        containers:
        - env:
          - name: AGENT_PORT
            value: "8888"
          - name: PEER_ADDRESS
            value: ${ADMIN_SVC_NAME}
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name: nuodb
                key: database-name
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: nuodb
                key: database-username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: nuodb
                key: database-password
          - name: NODE_REGION
            value: local
          - name: NODE_TYPE
            value: SM
          image: ${CONTAINER}
          imagePullPolicy: IfNotPresent
          name: sm
          ports:
          - containerPort: 48004
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /archive
            name: ${SM_PVC}
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: ${SM_PVC}
          persistentVolumeClaim:
            claimName: ${SM_PVC}
    test: false
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: "Transaction Engine(TE) pod instance deployment configuration"
      template.alpha.openshift.io/wait-for-ready: "true"
    labels:
      app: te
    name: te
  spec:
    replicas: 1
    selector:
      app: te
      deploymentconfig: te
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        labels:
          app: te
          deploymentconfig: te
      spec:
        containers:
        - env:
          - name: AGENT_PORT
            value: "8888"
          - name: PEER_ADDRESS
            value: ${ADMIN_SVC_NAME}
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name: nuodb
                key: database-name
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: nuodb
                key: database-username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: nuodb
                key: database-password
          - name: NODE_REGION
            value: local
          - name: NODE_TYPE
            value: TE
          image: ${CONTAINER}
          imagePullPolicy: IfNotPresent
          name: te
          ports:
          - containerPort: 48004
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /archive
            name: admin-volume-1
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: admin-volume-1
    test: false
parameters:
  - name: NAMESPACE
    displayName: Namespace
    description: "The OpenShift Namespace where the ImageStream resides."
    value: openshift
  - name: DB_NAME
    displayName: Database Name
    description: "NuoDB database name to create"
    required: true
    value:
  - name: DB_USER
    displayName: Database Username
    description: "NuoDB connection username."
    required: true
    value:
  - name: DB_PASSWORD
    displayName: Database User Password
    description: "Database user password."
    required: true
    value: 
  - name: ADMIN_SVC_NAME
    displayName: NuoDB Admin Service Name
    description: "Service Name to Connect to NuoAdmin."
    required: true
    value: nuodb-admin-service
  - name: SM_PVC
    displayName: Storage Manager Persistent Volume Claim
    description: "Name of the volume to create and use for persistent storage"
    required: true
    value: nuodb-storage-pvc-1
  - name: CONTAINER
    displayName: Container Registry
    description: "Registry to pull NuoDB from."
    required: true
    value: "docker.io/nuodb/nuodb-ee:3.1.0-53.2"
