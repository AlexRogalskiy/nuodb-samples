apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: nuodb-admin-openebs
  labels:
    template: nuodb-admin-openebs
  annotations:
    openshift.io/display-name: "NuoDB Admin (OpenEBS)"
    description: "NuoDB database service, with persistent storage. For more information about using this template, including OpenShift considerations, see https://hub.docker.com/r/nuodb/nuodb-ce/ \n\nWARNING: Any data stored will be lost upon pod destruction. Only use this template for testing"
    iconClass: https://www.nuodb.com/sites/all/themes/nuodb/logo.svg
    tags: "database,nuodb"
    openshift.io/long-description: "This template provides a Clustered NuoDB server with a database created.  The database is not stored on persistent storage, so any restart of the service will result in all data being lost.  The database name, username, and password are chosen via parameters when provisioning this service."
    openshift.io/provider-display-name: "NuoDB, Inc."
    openshift.io/documentation-url: "http://doc.nuodb.com/Latest/Default.htm"
    openshift.io/support-url: "https://support.nuodb.com/hc/en-us"
    message: "The following service(s) have been created in your project: placeholder.\n\n"
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: "Service for Admin pods."
    labels:
      group: nuodb
      app: nuodb
    name: ${ADMIN_SVC_NAME}-${NODE_REGION}
  spec:
    ports:
    - name: 8888-tcp
      port: "8888"
      protocol: TCP
      targetPort: 8888
    - name: 48004-tcp
      port: 48004
      protocol: TCP
      targetPort: 48004
    - name: 48005-tcp
      port: 48005
      protocol: TCP
      targetPort: 48005
    selector:
      app: admin-${NODE_REGION}
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
    labels:
      group: nuodb
      app: nuodb
    name: nuoadmin-dns
  spec:
    PublishNotReadyAddresses: true
    clusterIP: None
    ports:
    - name: none
      port: 5000
      protocol: TCP
      targetPort: 5000
    selector:
      dns: nuoadmin
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: "apps/v1beta1"
  kind: StatefulSet
  metadata:
    name: nuoadmin-${NODE_REGION}-${UID}
    labels:
      group: nuodb
      app: nuodb
  spec:
    serviceName: nuoadmin-dns
    replicas: ${ADMIN_COUNT}
    selector:
      matchLabels:
        affinity: admin
        group: nuodb
    template:
      metadata:
        labels:
          dns: nuoadmin
          group: nuodb
          app: admin-${NODE_REGION}
          affinity: admin
      spec:
        nodeSelector:
          zone: ${NODE_REGION}
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 50
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: affinity
                    operator: In
                    values:
                    - admin
                topologyKey: "kubernetes.io/hostname"
        terminationGracePeriodSeconds: 15
        containers:
        - name: nuoadmin-${NODE_REGION}
          image: ${CONTAINER}
          imagePullPolicy: Always
          ports:
          - containerPort: 8888
            protocol: TCP
          - containerPort: 48004
            protocol: TCP
          - containerPort: 48005
            protocol: TCP
          env:
            - name: DNS_LOOKUP
              value: nuoadmin-dns
            - name: SUB_ID
              value: ${SUB_ID}
            - name: API_PORT
              value: "8888"
            - name: PEER_ADDRESS
              value: ${ADMIN_SVC_NAME}-${NODE_REGION}
            - name: NODE_REGION
              value: ${NODE_REGION}
            - name: NODE_TYPE
              value: NUOADMIN
            - name: FIRST_CLUSTER_API
              value: ${FIRST_CLUSTER_API}
            - name: INSIGHTS_URL
              value: "https://insights-qa.nuodb.com/api/1"
            - name: DEFAULT_OPTIONS
              value: ${DEFAULT_OPTIONS}
          volumeMounts:
          - mountPath: /opt/nuodb/var/opt
            name: nuoadmin-raft-${NODE_REGION}
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 2
            failureThreshold: 30
            successThreshold: 2
            timeoutSeconds: 1
            httpGet:
              path: /api/1/peers
              port: 8888
    volumeClaimTemplates:
    - metadata:
        name: nuoadmin-raft-${NODE_REGION}
      spec:
        selector:
          app: nuodb
        labels:
          app: nuodb
        storageClassName: ${PVC_CLASS_NAME}
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: ${ADMIN_PVC_SIZE}
parameters:
  - name: NODE_REGION
    displayName: Deployment Zone
    description: "Deploy NuoDB to labeled OpenShift Nodes"
    required: true
    value:
  - name: FIRST_CLUSTER_API
    displayName: Existing NuoDB Admin Service Address
    description: "Join an existing NuoDB cluster"
    value:
  - name: ADMIN_SVC_NAME
    displayName: NuoDB Admin Service Name
    description: "Service Name to Connect to NuoAdmin. Node region parameter will be appended to string"
    required: true
    value: nuodb-svc
  - name: ADMIN_PVC_SIZE
    diplayName: Admin Raft Log Volume Size (GB)
    description: "PVC Size for Admin in GB"
    required: true
    value: 5G
  - name: SUB_ID
    displayName: Insights Subscriber ID
    description: "Insights Subscriber ID"
    value:
  - name: ADMIN_COUNT
    displayName: Number of NuoADMIN nodes to Launch
    description: "Start NuoDB with a specific number of NuoADMINs"
    required: true
    value: "3"
  - name: PVC_CLASS_NAME
    displayName: Persistent Storage Class Name
    desicrption: "Name of Storage Class for persistent storage"
    required: true
    value: openebs-percona
  - name: CONTAINER
    displayName: Container Registry
    description: "Registry to pull NuoDB from"
    required: true
    value: "docker.io/nuodb/nuodb-ee:3.3.0-master-5611"
  - name: UID
    description: "Generate UID for deployment names"
    generate: expression
    from: "[a-z]{5}"