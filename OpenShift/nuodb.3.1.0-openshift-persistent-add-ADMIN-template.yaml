apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: nuodb.3.1.0-ce-ephemeral
  labels:
    template: nuodb.3.1.0-ce-ephemeral
  annotations:
    openshift.io/display-name: "NouDB CE (Ephemeral)"
    description: "NuoDB database service, without persistent storage. For more information about using this template, including OpenShift considerations, see https://hub.docker.com/r/nuodb/nuodb-ce/ \n\nWARNING: Any data stored will be lost upon pod destruction. Only use this template for testing"
    iconClass: icon-mysql-database
    tags: "database,nuodb"
    openshift.io/long-description: "This template provides a Clustered NuoDB server with a database created.  The database is not stored on persistent storage, so any restart of the service will result in all data being lost.  The database name, username, and password are chosen via parameters when provisioning this service."
    openshift.io/provider-display-name: "NuoDB, Inc."
    openshift.io/documentation-url: "http://doc.nuodb.com/Latest/Default.htm"
    openshift.io/support-url: "https://support.nuodb.com/hc/en-us"
    message: "The following service(s) have been created in your project: placeholder.\n\n"
objects:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${ADMIN_PVC_1}
  spec:
    storageClassName: openebs-percona
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: ${ADMIN_PVC_SIZE}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: "Admin pod instance deployment configuration"
      template.alpha.openshift.io/wait-for-ready: "true"
    labels:
      app: admin
    name: ${ADMIN_APP_NAME}
  spec:
    replicas: 1
    selector:
      app: admin
      deploymentconfig: ${ADMIN_APP_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        labels:
          app: admin
          deploymentconfig: ${ADMIN_APP_NAME}
      spec:
        hostname: nuo${ADMIN_APP_NAME}
        containers:
        - env:
          - name: API_PORT
            value: "8888"
          - name: PEER_ADDRESS
            value: ${ADMIN_SVC_NAME}
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name: nuodb
                key: database-name
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: nuodb
                key: database-username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: nuodb
                key: database-password
          - name: NODE_REGION
            value: local
          - name: NODE_TYPE
            value: NUOADMIN
          - name: ADMIN_TYPE
            value: LEADER
          image: ${CONTAINER}
          imagePullPolicy: IfNotPresent
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 2
            failureThreshold: 30
            successThreshold: 4
            timeoutSeconds: 1
            httpGet:
              path: /api/1/peers
              port: 8888
          name: ${ADMIN_APP_NAME}
          ports:
          - containerPort: 8888
            protocol: TCP
          - containerPort: 48004
            protocol: TCP
          - containerPort: 48005
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/nuodb/var/opt
            name: ${ADMIN_PVC_1}
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 15
        volumes:
        - name: ${ADMIN_PVC_1}
          persistentVolumeClaim:
            claimName: ${ADMIN_PVC_1}
    test: false
parameters:
  - name: NAMESPACE
    displayName: Namespace
    description: "The OpenShift Namespace where the ImageStream resides."
    value: openshift
  - name: ADMIN_APP_NAME
    displayName: Admin container name
    description: "Name for container"
    required: true
    value: admin4
  - name: ADMIN_SVC_NAME
    displayName: NuoDB Admin Service Name
    description: "Service Name to Connect to NuoAdmin."
    required: true
    value: nuodb-admin-service
  - name: ADMIN_PVC_1
    displayName: Admin Raft log Persistent Volume Claim Admin
    description: "Name of the volume to create and use for persistent storage for Admin"
    required: true
    value: nuodb-admin-pvc-4
  - name: ADMIN_PVC_SIZE
    diplayName: Admin Raft Log Volume Size (GB)
    description: "PVC Size for Admin in GB"
    required: true
    value: 5G
  - name: CONTAINER
    displayName: Container Registry
    description: "Registry to pull NuoDB from."
    required: true
    value: "docker.io/nuodb/nuodb-ee:3.1.0-53.10"
